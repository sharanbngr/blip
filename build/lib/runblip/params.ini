[params]
fmin=2e-4
fmax=1e-2
## duration in seconds, should be compatiable with fmin
duration=0.53e7
## segment length for fft in seconds, should be compatiable with fmin
## Note by SB: Looks like this needs to be atleast a factor of 10 larger than 1/fmin
## to give consistant recoveries.
seglen=1e5
## sample rate in Hz, should be compatible with fmax
## Note by SB: Looks like this needs to be atleast a factor of 4
## higher than fmax (as opposed to the usual factor of 2) to give
## consistent recoveries.
fs=0.125
Shfile=LISA_2017_PSD_M.npy
nside=6
tstart = 15552000

## LISA configuration. Can be stationary or orbiting
lisa_config=orbiting

## Level of the tdi. Can be michelson, xyz or aet
tdi_lev=xyz

# If the mldc flag is set to 1, then the time series data is read in from a file.
mldc=0
datafile=mldc_tdi_withnoise.txt

# Doppler or strain data. MLDC data is doppler, owndata is strain. Can be doppler or strain
datatype=strain

## If loadResponse is true, then a previously generated set of detector responses is read in from a file. Only use when running repeated analyses on the same data set. Only used for orbiting LISA configuration due to the increased computation time of that case.
## File loaded depends on tdi_lev.
loadResponse=0

## If loadCustom is also true, the detector response arrays will be loaded from files specified by the user (responsefile1,2,3). Specified detector responses should be compatible with tdi_lev.
## IMPORTANT - only load responses when analyzing the dataset originally used to generate them. The code will throw an error if the duration/segment length (dur/seglen) don't match. However, mismatched combinations of data and responses can still function in some cases and will produce erroneous results.
loadCustom=0
responsefile1=R1arrayAETMLDC.txt
responsefile2=R2arrayAETMLDC.txt
responsefile3=R3arrayAETMLDC.txt

## fref parameter useful for powerlaw stochastic backgrounds
fref = 25
## recovery model type, can be isgwb, sph_sgwb, isgwb_only or noise_only for now
modeltype=sph_sgwb
lmax=2
## Truevals for whatever parameters are being used.
## This should be a comma seperate list WITHOUT spaces
## For sph, the list is alpha, {log_omega_lm}, Np, Na
truevals=0.667,-8.455,-41.045,-48.443

sampler=dynesty

[inj]
# Power Law Injection
# Omege0 is defined as the power at 1e-3 Hz
doInj=1
## the monopole dimensionless energy density
omega0=2e-07
## the spectral index
alpha=0.667
## Position noise
Np=9e-42
## Acceleration noise
Na=3.6e-49

## what type of simulated signal to add? Same choices
## as modeltype above. 
injtype=sph_sgwb

## if inj_type==sph_sgwb what are the blm values.
## Complex quantities in a comma seperated list in healpix order
## b00 can only be 1. b_{l, -m} = (-1)**m b_lm
# blms = b00, b10, b11 for blmax = 1, alamx = 2 
# blms = b00, b10, b20, b11, b21, b22 for blmax = 2, almax = 4
# blms = b00, b10, b20, b30, b11, b21, b31, b22, b32, b33 for blmax = 3, almax = 6
blms   = 1.0, 0.75, 0.5, 0.7j, 0.7-0.3j, 1.1j 

[run_params] # Parameters related to the run or to the sampler
out_dir=./mainruns/sph/2mnths_4/
verbose=1
# Set doPreProc to 1 to force generation of fake data again rather than used
# precalculated data in the data_spectrum file
doPreProc=0
nlive=400
Nthreads=1
## If FixSeed is true, the sampler will use random states generated by the seed given in the 'seed' parameter below. This allows for reproduction of sampling results; for a given seed value, repeated analyses of the same dataset will produce precisely identical results. The seed can be any unsigned 32-bit integer.
FixSeed=1
seed=200
# Must be .npz file
input_spectrum=data_spectrum.npz
